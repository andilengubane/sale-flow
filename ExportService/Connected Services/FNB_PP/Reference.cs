//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ExportService.FNB_PP {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FNB_PP.IExportPassthroughWS")]
    public interface IExportPassthroughWS {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExportPassthroughWS/Marco", ReplyAction="http://tempuri.org/IExportPassthroughWS/MarcoResponse")]
        string Marco();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExportPassthroughWS/Marco", ReplyAction="http://tempuri.org/IExportPassthroughWS/MarcoResponse")]
        System.Threading.Tasks.Task<string> MarcoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExportPassthroughWS/ExportSale", ReplyAction="http://tempuri.org/IExportPassthroughWS/ExportSaleResponse")]
        string ExportSale(string xmlToExport);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExportPassthroughWS/ExportSale", ReplyAction="http://tempuri.org/IExportPassthroughWS/ExportSaleResponse")]
        System.Threading.Tasks.Task<string> ExportSaleAsync(string xmlToExport);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExportPassthroughWS/EnquirePolicy", ReplyAction="http://tempuri.org/IExportPassthroughWS/EnquirePolicyResponse")]
        string EnquirePolicy(string xmlPolicyNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExportPassthroughWS/EnquirePolicy", ReplyAction="http://tempuri.org/IExportPassthroughWS/EnquirePolicyResponse")]
        System.Threading.Tasks.Task<string> EnquirePolicyAsync(string xmlPolicyNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExportPassthroughWS/UpgradePolicy", ReplyAction="http://tempuri.org/IExportPassthroughWS/UpgradePolicyResponse")]
        string UpgradePolicy(string policyXmlToUpgrade);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExportPassthroughWS/UpgradePolicy", ReplyAction="http://tempuri.org/IExportPassthroughWS/UpgradePolicyResponse")]
        System.Threading.Tasks.Task<string> UpgradePolicyAsync(string policyXmlToUpgrade);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IExportPassthroughWSChannel : ExportService.FNB_PP.IExportPassthroughWS, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ExportPassthroughWSClient : System.ServiceModel.ClientBase<ExportService.FNB_PP.IExportPassthroughWS>, ExportService.FNB_PP.IExportPassthroughWS {
        
        public ExportPassthroughWSClient() {
        }
        
        public ExportPassthroughWSClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ExportPassthroughWSClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ExportPassthroughWSClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ExportPassthroughWSClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Marco() {
            return base.Channel.Marco();
        }
        
        public System.Threading.Tasks.Task<string> MarcoAsync() {
            return base.Channel.MarcoAsync();
        }
        
        public string ExportSale(string xmlToExport) {
            return base.Channel.ExportSale(xmlToExport);
        }
        
        public System.Threading.Tasks.Task<string> ExportSaleAsync(string xmlToExport) {
            return base.Channel.ExportSaleAsync(xmlToExport);
        }
        
        public string EnquirePolicy(string xmlPolicyNumber) {
            return base.Channel.EnquirePolicy(xmlPolicyNumber);
        }
        
        public System.Threading.Tasks.Task<string> EnquirePolicyAsync(string xmlPolicyNumber) {
            return base.Channel.EnquirePolicyAsync(xmlPolicyNumber);
        }
        
        public string UpgradePolicy(string policyXmlToUpgrade) {
            return base.Channel.UpgradePolicy(policyXmlToUpgrade);
        }
        
        public System.Threading.Tasks.Task<string> UpgradePolicyAsync(string policyXmlToUpgrade) {
            return base.Channel.UpgradePolicyAsync(policyXmlToUpgrade);
        }
    }
}
